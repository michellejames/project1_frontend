a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}body,html{width:100%;height:100%}.header__img{background-image:url(../../assets/img/banner.png);width:100%;height:20vh;background-repeat:no-repeat;background-size:cover;background-position:50%}@media screen and (min-width:600px){.header__img{height:40vh;background-position:0 -50px center}}@media screen and (min-width:900px){.header__img{background-position:0 -50px}}@media screen and (min-width:1200px){.header__img{background-position:0 -100px;height:40vh}}.headline{font-family:Handlee,cursive;font-size:5em;text-align:center;margin-top:5%;color:#ee5f88;text-decoration:underline}.nav{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.nav a{margin:5%;text-decoration:none;font-family:Handlee,cursive;font-size:2em;color:#27336b}.nav a:hover{text-decoration:underline}.addToDoItems{margin-left:14%;margin-bottom:5%;display:-ms-flexbox;display:flex}.addToDoItems input{border:2px solid #ee5f88;font-size:1.5em;padding:2%;margin-right:2%}.addToDoItems button{font-size:1.5em;font-family:Handlee,cursive;background:#27336b;color:#ee5f88;border:1px solid transparent;padding:2% 3%}.toDoItems{margin-left:10%}.task{font-family:Handlee,cursive;font-size:2em;color:#27336b;line-height:50px}#checkBox{margin-right:2%;font-size:2em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
